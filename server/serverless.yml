service: snap

provider:
  name: aws
  runtime: nodejs8.10

  region: us-east-1
  profile: default
  stage: production

  environment:
    CHANNELS_TABLE: ${self:service}.${opt:stage, self:provider.stage}.channels

  iamRoleStatements:
    - Effect: "Allow"
      Action:
       - dynamodb:Query
       - dynamodb:Scan
       - dynamodb:PutItem
       - dynamodb:GetItem
       - dynamodb:UpdateItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.CHANNELS_TABLE}"

functions:
  RetrieveChannel:
    handler: source/retrieveChannel.handler
    events:
      - http:
          path: v1/channels/{channelId}
          method: get
          cors: true
  ResetSession:
    handler: source/resetChannelSession.handler
    events:
      - http:
          path: v1/channels/{channelId}/session
          method: post
          cors: true
  RetrieveGameSparksCredentials:
    handler: source/retrieveGameSparksCredentials.handler
    events:
      - http:
          path: v1/gamesparks/{nonce}
          method: get
          cors: true
  # SubmitScore:
  #   handler: source/SubmitScore.handler
  #   events:
  #     - http:
  #         path: v1/channels/{channelId}/scores
  #         method: post
  #         cors: true

resources:
  Resources:
    ChannelsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.CHANNELS_TABLE}
        AttributeDefinitions:
          - AttributeName: channelId
            AttributeType: S
        KeySchema:
          - AttributeName: channelId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
      DeletionPolicy: Retain

package:
  excludeDevDependencies: true
